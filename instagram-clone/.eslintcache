[{"C:\\Users\\Asiya\\Documents\\ShopifyImageRepo\\instagram-clone\\src\\index.js":"1","C:\\Users\\Asiya\\Documents\\ShopifyImageRepo\\instagram-clone\\src\\App.js":"2","C:\\Users\\Asiya\\Documents\\ShopifyImageRepo\\instagram-clone\\src\\reportWebVitals.js":"3","C:\\Users\\Asiya\\Documents\\ShopifyImageRepo\\instagram-clone\\src\\post.js":"4","C:\\Users\\Asiya\\Documents\\ShopifyImageRepo\\instagram-clone\\src\\firebase.js":"5","C:\\Users\\Asiya\\Documents\\ShopifyImageRepo\\instagram-clone\\src\\ImageUpload.js":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":5572,"mtime":1610870841452,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":2650,"mtime":1610867951516,"results":"11","hashOfConfig":"8"},{"size":693,"mtime":1610778491044,"results":"12","hashOfConfig":"8"},{"size":2149,"mtime":1610852866976,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"z8gb0u",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"16"},"C:\\Users\\Asiya\\Documents\\ShopifyImageRepo\\instagram-clone\\src\\index.js",[],["28","29"],"C:\\Users\\Asiya\\Documents\\ShopifyImageRepo\\instagram-clone\\src\\App.js",[],"C:\\Users\\Asiya\\Documents\\ShopifyImageRepo\\instagram-clone\\src\\reportWebVitals.js",[],"C:\\Users\\Asiya\\Documents\\ShopifyImageRepo\\instagram-clone\\src\\post.js",["30"],"C:\\Users\\Asiya\\Documents\\ShopifyImageRepo\\instagram-clone\\src\\firebase.js",[],"C:\\Users\\Asiya\\Documents\\ShopifyImageRepo\\instagram-clone\\src\\ImageUpload.js",["31","32"],"import React, { useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport { storage, db } from \"./firebase\";\r\nimport firebase from \"firebase\";\r\nimport \"./ImageUpload.css\"\r\n\r\nfunction ImageUpload({username}) {\r\n\r\n    const [image, setImage] = useState(null);\r\n    const [url, setUrl] = useState(\"\");\r\n    const [progress, setProgress] = useState(0);\r\n    const [caption, setCaption] = useState('');\r\n\r\n    const handleChange = (e) => {\r\n        if (e.target.files[0]) {\r\n            setImage(e.target.files[0])\r\n        }\r\n    };\r\n\r\n    const handleUpload = () => {\r\n        const uploadTask = storage.ref(`images/${image.name}`).put(image);\r\n        uploadTask.on(\r\n            \"state_changes\",\r\n            (snapshot) => {\r\n                const progress = Math.round(\r\n                    (snapshot.bytesTransferred /snapshot.totalBytes) * 100\r\n                );\r\n                setProgress(progress)\r\n            }, \r\n            (error) => {\r\n                console.log(error);\r\n                alert(error.message);\r\n            },\r\n            () => {\r\n                storage\r\n                .ref(\"images\")\r\n                .child(image.name)\r\n                .getDownloadURL()\r\n                .then(url => {\r\n                    db.collection(\"posts\").add({\r\n                        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n                        caption: caption,\r\n                        imageUrl: url,\r\n                        username: username\r\n                    })\r\n                    setProgress(0);\r\n                    setCaption(\"\");\r\n                    setImage(null);\r\n                });\r\n\r\n            }\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"imageupload\">\r\n            <progress className=\"imageupload__Progress\" value={progress} max=\"100\" />\r\n            <input type=\"text\" placeholder='Enter a caption...' onChange={event => setCaption(event.target.value)} value={caption}/>\r\n            <input type=\"file\" onChange={handleChange} />\r\n            <Button onClick={handleUpload}>Upload</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageUpload\r\n",{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":50,"column":13,"nodeType":"39","endLine":50,"endColumn":58},{"ruleId":"40","severity":1,"message":"41","line":10,"column":12,"nodeType":"42","messageId":"43","endLine":10,"endColumn":15},{"ruleId":"40","severity":1,"message":"44","line":10,"column":17,"nodeType":"42","messageId":"43","endLine":10,"endColumn":23},"no-native-reassign",["45"],"no-negated-in-lhs",["46"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'url' is assigned a value but never used.","Identifier","unusedVar","'setUrl' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]